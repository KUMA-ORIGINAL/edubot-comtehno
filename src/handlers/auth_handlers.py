from aiogram import types, F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from sqlalchemy.orm import Session

import keyboards
from database import user_queries
from database.database import User

auth_router = Router()


class UserState(StatesGroup):
    role = State()
    email = State()


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@auth_router.message(Command('start'))
async def cmd_start(message: types.Message, session: Session):
    telegram_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    user = user_queries.get_user_by_id(telegram_id=telegram_id, session=session)

    if user:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ä–æ–ª–∏
        await send_menu_by_role(message, user)
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        await message.answer(
            text="–ü—Ä–∏–≤–µ—Ç! –Ø —É—á–µ–±–Ω—ã–π –±–æ—Ç. \n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å: ",
            reply_markup=keyboards.ROLE_KB  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
        )


async def send_menu_by_role(message: types.Message, user: User):
    first_name = user.first_name
    last_name = user.last_name
    email = user.email
    role = user.role

    if role == "—Å—Ç—É–¥–µ–Ω—Ç":
        await message.answer(
            text=(
                f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name} {last_name}!\n\n"
                f"–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ —Å—Ç—É–¥–µ–Ω—Ç.\n"
                f"–í–∞—à email: {email}\n\n"
                "–í —ç—Ç–æ–π —Å–∏—Å—Ç–µ–º–µ –≤—ã –º–æ–∂–µ—Ç–µ:\n"
                "üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –∑–∞–¥–∞–Ω–∏—è\n"
                "üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ."
            ),
            reply_markup=keyboards.STUDENT_MENU
        )
    elif role == "–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å":
        await message.answer(
            text=(
                f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name} {last_name}!\n\n"
                f"–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å.\n"
                f"–í–∞—à email: {email}\n\n"
                "–í —ç—Ç–æ–π —Å–∏—Å—Ç–µ–º–µ –≤—ã –º–æ–∂–µ—Ç–µ:\n"
                "üìã –°–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è\n"
                "üìù –ü—Ä–æ–≤–µ—Ä—è—Ç—å —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ."
            ),
            reply_markup=keyboards.TEACHER_MENU
        )


# Handler for role selection
@auth_router.callback_query(F.data.startswith('role_'))
async def process_role(callback: types.CallbackQuery, state: FSMContext):
    role = callback.data
    if role == "role_student":
        selected_role = "—Å—Ç—É–¥–µ–Ω—Ç"
    else:
        selected_role = "–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"

    await state.update_data(role=selected_role)

    await callback.message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {selected_role}. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à email:")

    await state.set_state(UserState.email)
    await callback.answer()


# Handler for email input
@auth_router.message(UserState.email)
async def process_email(message: types.Message, state: FSMContext, session: Session):
    email = message.text
    telegram_id = message.from_user.id

    if "@" not in email or "." not in email:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π email:")
        return

    user_data = await state.get_data()
    role = user_data.get("role")

    if not user_queries.get_user_by_id(
        telegram_id=telegram_id,
        session=session
    ):
        user = user_queries.create_user(
            telegram_id=telegram_id,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
            email=email,
            role=role,
            session=session
        )
        await message.answer(f"–°–ø–∞—Å–∏–±–æ! –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ {role}.")

        await send_menu_by_role(message, user)
    else:
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º Telegram ID —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
    await state.clear()
